                                                  Input															    Stack		               Action
$ End ) maxval ( return endfor endif ; L[i] = maxval maxval > L[i] if do 1 - n to 1 = i for ; L[0] = maxval int ; L[10] int begin main() int |                       S $ |       T[S][int] = S->T M B A D
$ End ) maxval ( return endfor endif ; L[i] = maxval maxval > L[i] if do 1 - n to 1 = i for ; L[0] = maxval int ; L[10] int begin main() int |               T M B A D $ |             T[T][int] = T->int
$ End ) maxval ( return endfor endif ; L[i] = maxval maxval > L[i] if do 1 - n to 1 = i for ; L[0] = maxval int ; L[10] int begin main() int |             int M B A D $ |                   Matched1:int
$ End ) maxval ( return endfor endif ; L[i] = maxval maxval > L[i] if do 1 - n to 1 = i for ; L[0] = maxval int ; L[10] int begin main() |                 M B A D $ |       T[M][main()] = M->main()
$ End ) maxval ( return endfor endif ; L[i] = maxval maxval > L[i] if do 1 - n to 1 = i for ; L[0] = maxval int ; L[10] int begin main() |            main() B A D $ |                Matched1:main()
$ End ) maxval ( return endfor endif ; L[i] = maxval maxval > L[i] if do 1 - n to 1 = i for ; L[0] = maxval int ; L[10] int begin |                   B A D $ |         T[B][begin] = B->begin
$ End ) maxval ( return endfor endif ; L[i] = maxval maxval > L[i] if do 1 - n to 1 = i for ; L[0] = maxval int ; L[10] int begin |               begin A D $ |                 Matched1:begin
$ End ) maxval ( return endfor endif ; L[i] = maxval maxval > L[i] if do 1 - n to 1 = i for ; L[0] = maxval int ; L[10] int |                     A D $ |       T[A][int] = A->E F G W X
$ End ) maxval ( return endfor endif ; L[i] = maxval maxval > L[i] if do 1 - n to 1 = i for ; L[0] = maxval int ; L[10] int |             E F G W X D $ |       T[E][int] = E->T L[10] ;
$ End ) maxval ( return endfor endif ; L[i] = maxval maxval > L[i] if do 1 - n to 1 = i for ; L[0] = maxval int ; L[10] int |     T L[10] ; F G W X D $ |             T[T][int] = T->int
$ End ) maxval ( return endfor endif ; L[i] = maxval maxval > L[i] if do 1 - n to 1 = i for ; L[0] = maxval int ; L[10] int |   int L[10] ; F G W X D $ |                   Matched1:int
$ End ) maxval ( return endfor endif ; L[i] = maxval maxval > L[i] if do 1 - n to 1 = i for ; L[0] = maxval int ; L[10] |       L[10] ; F G W X D $ |                 Matched1:L[10]
$ End ) maxval ( return endfor endif ; L[i] = maxval maxval > L[i] if do 1 - n to 1 = i for ; L[0] = maxval int ; |             ; F G W X D $ |                     Matched1:;
$ End ) maxval ( return endfor endif ; L[i] = maxval maxval > L[i] if do 1 - n to 1 = i for ; L[0] = maxval int |               F G W X D $ | T[F][int] = F->T maxval = L[0] ;
$ End ) maxval ( return endfor endif ; L[i] = maxval maxval > L[i] if do 1 - n to 1 = i for ; L[0] = maxval int | T maxval = L[0] ; G W X D $ |             T[T][int] = T->int
$ End ) maxval ( return endfor endif ; L[i] = maxval maxval > L[i] if do 1 - n to 1 = i for ; L[0] = maxval int | int maxval = L[0] ; G W X D $ |                   Matched1:int
$ End ) maxval ( return endfor endif ; L[i] = maxval maxval > L[i] if do 1 - n to 1 = i for ; L[0] = maxval | maxval = L[0] ; G W X D $ |                Matched1:maxval
$ End ) maxval ( return endfor endif ; L[i] = maxval maxval > L[i] if do 1 - n to 1 = i for ; L[0] = |        = L[0] ; G W X D $ |                     Matched1:=
  $ End ) maxval ( return endfor endif ; L[i] = maxval maxval > L[i] if do 1 - n to 1 = i for ; L[0] |          L[0] ; G W X D $ |                  Matched1:L[0]
       $ End ) maxval ( return endfor endif ; L[i] = maxval maxval > L[i] if do 1 - n to 1 = i for ; |               ; G W X D $ |                     Matched1:;
         $ End ) maxval ( return endfor endif ; L[i] = maxval maxval > L[i] if do 1 - n to 1 = i for |                 G W X D $ |        T[G][for] = G->for C do
         $ End ) maxval ( return endfor endif ; L[i] = maxval maxval > L[i] if do 1 - n to 1 = i for |          for C do W X D $ |                   Matched1:for
             $ End ) maxval ( return endfor endif ; L[i] = maxval maxval > L[i] if do 1 - n to 1 = i |              C do W X D $ |    T[C][i] = C->i = 1 to n - 1
             $ End ) maxval ( return endfor endif ; L[i] = maxval maxval > L[i] if do 1 - n to 1 = i | i = 1 to n - 1 do W X D $ |                     Matched1:i
               $ End ) maxval ( return endfor endif ; L[i] = maxval maxval > L[i] if do 1 - n to 1 = |   = 1 to n - 1 do W X D $ |                     Matched1:=
                 $ End ) maxval ( return endfor endif ; L[i] = maxval maxval > L[i] if do 1 - n to 1 |     1 to n - 1 do W X D $ |                     Matched1:1
                   $ End ) maxval ( return endfor endif ; L[i] = maxval maxval > L[i] if do 1 - n to |       to n - 1 do W X D $ |                    Matched1:to
                      $ End ) maxval ( return endfor endif ; L[i] = maxval maxval > L[i] if do 1 - n |          n - 1 do W X D $ |                     Matched1:n
                        $ End ) maxval ( return endfor endif ; L[i] = maxval maxval > L[i] if do 1 - |            - 1 do W X D $ |                     Matched1:-
                          $ End ) maxval ( return endfor endif ; L[i] = maxval maxval > L[i] if do 1 |              1 do W X D $ |                     Matched1:1
                            $ End ) maxval ( return endfor endif ; L[i] = maxval maxval > L[i] if do |                do W X D $ |                    Matched1:do
                               $ End ) maxval ( return endfor endif ; L[i] = maxval maxval > L[i] if |                   W X D $ | T[W][if] = W->if L[i] > maxval P Q R
                               $ End ) maxval ( return endfor endif ; L[i] = maxval maxval > L[i] if | if L[i] > maxval P Q R X D $ |                    Matched1:if
                                  $ End ) maxval ( return endfor endif ; L[i] = maxval maxval > L[i] | L[i] > maxval P Q R X D $ |                  Matched1:L[i]
                                       $ End ) maxval ( return endfor endif ; L[i] = maxval maxval > |      > maxval P Q R X D $ |                     Matched1:>
                                         $ End ) maxval ( return endfor endif ; L[i] = maxval maxval |        maxval P Q R X D $ |                Matched1:maxval
                                                $ End ) maxval ( return endfor endif ; L[i] = maxval |               P Q R X D $ | T[P][maxval] = P->maxval = L[i] ;
                                                $ End ) maxval ( return endfor endif ; L[i] = maxval | maxval = L[i] ; Q R X D $ |                Matched1:maxval
                                                       $ End ) maxval ( return endfor endif ; L[i] = |        = L[i] ; Q R X D $ |                     Matched1:=
                                                         $ End ) maxval ( return endfor endif ; L[i] |          L[i] ; Q R X D $ |                  Matched1:L[i]
                                                              $ End ) maxval ( return endfor endif ; |               ; Q R X D $ |                     Matched1:;
                                                                $ End ) maxval ( return endfor endif |                 Q R X D $ |         T[Q][endif] = Q->endif
                                                                $ End ) maxval ( return endfor endif |             endif R X D $ |                 Matched1:endif
                                                                      $ End ) maxval ( return endfor |                   R X D $ |       T[R][endfor] = R->endfor
                                                                      $ End ) maxval ( return endfor |              endfor X D $ |                Matched1:endfor
                                                                             $ End ) maxval ( return |                     X D $ | T[X][return] = X->return ( maxval )
                                                                             $ End ) maxval ( return |     return ( maxval ) D $ |                Matched1:return
                                                                                    $ End ) maxval ( |            ( maxval ) D $ |                     Matched1:(
                                                                                      $ End ) maxval |              maxval ) D $ |                Matched1:maxval
                                                                                             $ End ) |                     ) D $ |                     Matched1:)
                                                                                               $ End |                       D $ |             T[D][End] = D->End
                                                                                               $ End |                     End $ |                   Matched1:End
                                                                                                   $ |                         $ |                          Valid
